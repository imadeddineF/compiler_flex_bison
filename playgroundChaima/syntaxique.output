Terminals unused in grammar

   ERR


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: programme $end

    1 programme: DEBUT declarations EXECUTION bloc FIN

    2 declarations: declaration declarations
    3             | /* empty */

    4 declaration: FIXE type_variable DEUX_POINTS IDF EGAL expression POINT_VIRGULE
    5            | type_variable DEUX_POINTS IDF POINT_VIRGULE

    6 type_variable: TYPE_NUM
    7              | TYPE_REAL
    8              | TYPE_TEXT
    9              | TYPE_SIGNEDNUM
   10              | TYPE_SIGNEDREAL

   11 affect: IDF AFFECTION expression POINT_VIRGULE

   12 bloc: condition
   13     | boucle
   14     | ACCOLADE_OUVRANTE instructions ACCOLADE_FERMANTE

   15 instructions: instruction instructions
   16             | /* empty */

   17 instruction: AFFICHE PARENTHOISE_OUVRANTE liste_arguments PARENTHOISE_FERMANTE POINT_VIRGULE
   18            | LIRE IDF POINT_VIRGULE
   19            | condition
   20            | boucle
   21            | affect

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc SINON bloc
   23          | SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE FAIRE bloc

   25 liste_arguments: TEXT
   26                | IDF
   27                | liste_arguments VIRGULE TEXT
   28                | liste_arguments VIRGULE IDF

   29 expression: operation_arithmetique
   30           | operation_logique
   31           | IDF
   32           | NUM
   33           | REAL
   34           | SIGNEDNUM
   35           | SIGNEDREAL
   36           | TEXT
   37           | condition
   38           | boucle
   39           | PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE

   40 operation_arithmetique: expression PLUS expression
   41                       | expression MOINS expression
   42                       | expression MULT expression
   43                       | expression DIV expression

   44 operation_logique: expression EGAL expression
   45                  | expression INF expression
   46                  | expression SUP expression
   47                  | expression DIFFERENT expression
   48                  | expression INF_EGAL expression
   49                  | expression SUP_EGAL expression
   50                  | expression ET expression
   51                  | expression OU expression
   52                  | NON expression


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 32
SIGNEDNUM (259) 34
REAL (260) 33
SIGNEDREAL (261) 35
TEXT (262) 25 27 36
IDF (263) 4 5 11 18 26 28 31
SI (264) 22 23
ALORS (265) 22 23
SINON (266) 22
TANTQUE (267) 24
FAIRE (268) 24
DEBUT (269) 1
FIN (270) 1
EXECUTION (271) 1
FIXE (272) 4
AFFICHE (273) 17
LIRE (274) 18
ACCOLADE_OUVRANTE (275) 14
ACCOLADE_FERMANTE (276) 14
PARENTHOISE_OUVRANTE (277) 17 22 23 24 39
PARENTHOISE_FERMANTE (278) 17 22 23 24 39
PLUS (279) 40
MOINS (280) 41
MULT (281) 42
DIV (282) 43
VIRGULE (283) 27 28
POINT_VIRGULE (284) 4 5 11 17 18
DEUX_POINTS (285) 4 5
EGAL (286) 4 44
INF (287) 45
SUP (288) 46
DIFFERENT (289) 47
INF_EGAL (290) 48
SUP_EGAL (291) 49
AFFECTION (292) 11
OU (293) 51
ET (294) 50
NON (295) 52
ERR (296)
TYPE_NUM (297) 6
TYPE_REAL (298) 7
TYPE_TEXT (299) 8
TYPE_SIGNEDNUM (300) 9
TYPE_SIGNEDREAL (301) 10


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
programme (48)
    on left: 1, on right: 0
declarations (49)
    on left: 2 3, on right: 1 2
declaration (50)
    on left: 4 5, on right: 2
type_variable (51)
    on left: 6 7 8 9 10, on right: 4 5
affect (52)
    on left: 11, on right: 21
bloc (53)
    on left: 12 13 14, on right: 1 22 23 24
instructions (54)
    on left: 15 16, on right: 14 15
instruction (55)
    on left: 17 18 19 20 21, on right: 15
condition (56)
    on left: 22 23, on right: 12 19 37
boucle (57)
    on left: 24, on right: 13 20 38
liste_arguments (58)
    on left: 25 26 27 28, on right: 17 27 28
expression (59)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 4 11 22 23
    24 39 40 41 42 43 44 45 46 47 48 49 50 51 52
operation_arithmetique (60)
    on left: 40 41 42 43, on right: 29
operation_logique (61)
    on left: 44 45 46 47 48 49 50 51 52, on right: 30


state 0

    0 $accept: . programme $end

    DEBUT  shift, and go to state 1

    programme  go to state 2


state 1

    1 programme: DEBUT . declarations EXECUTION bloc FIN

    FIXE             shift, and go to state 3
    TYPE_NUM         shift, and go to state 4
    TYPE_REAL        shift, and go to state 5
    TYPE_TEXT        shift, and go to state 6
    TYPE_SIGNEDNUM   shift, and go to state 7
    TYPE_SIGNEDREAL  shift, and go to state 8

    $default  reduce using rule 3 (declarations)

    declarations   go to state 9
    declaration    go to state 10
    type_variable  go to state 11


state 2

    0 $accept: programme . $end

    $end  shift, and go to state 12


state 3

    4 declaration: FIXE . type_variable DEUX_POINTS IDF EGAL expression POINT_VIRGULE

    TYPE_NUM         shift, and go to state 4
    TYPE_REAL        shift, and go to state 5
    TYPE_TEXT        shift, and go to state 6
    TYPE_SIGNEDNUM   shift, and go to state 7
    TYPE_SIGNEDREAL  shift, and go to state 8

    type_variable  go to state 13


state 4

    6 type_variable: TYPE_NUM .

    $default  reduce using rule 6 (type_variable)


state 5

    7 type_variable: TYPE_REAL .

    $default  reduce using rule 7 (type_variable)


state 6

    8 type_variable: TYPE_TEXT .

    $default  reduce using rule 8 (type_variable)


state 7

    9 type_variable: TYPE_SIGNEDNUM .

    $default  reduce using rule 9 (type_variable)


state 8

   10 type_variable: TYPE_SIGNEDREAL .

    $default  reduce using rule 10 (type_variable)


state 9

    1 programme: DEBUT declarations . EXECUTION bloc FIN

    EXECUTION  shift, and go to state 14


state 10

    2 declarations: declaration . declarations

    FIXE             shift, and go to state 3
    TYPE_NUM         shift, and go to state 4
    TYPE_REAL        shift, and go to state 5
    TYPE_TEXT        shift, and go to state 6
    TYPE_SIGNEDNUM   shift, and go to state 7
    TYPE_SIGNEDREAL  shift, and go to state 8

    $default  reduce using rule 3 (declarations)

    declarations   go to state 15
    declaration    go to state 10
    type_variable  go to state 11


state 11

    5 declaration: type_variable . DEUX_POINTS IDF POINT_VIRGULE

    DEUX_POINTS  shift, and go to state 16


state 12

    0 $accept: programme $end .

    $default  accept


state 13

    4 declaration: FIXE type_variable . DEUX_POINTS IDF EGAL expression POINT_VIRGULE

    DEUX_POINTS  shift, and go to state 17


state 14

    1 programme: DEBUT declarations EXECUTION . bloc FIN

    SI                 shift, and go to state 18
    TANTQUE            shift, and go to state 19
    ACCOLADE_OUVRANTE  shift, and go to state 20

    bloc       go to state 21
    condition  go to state 22
    boucle     go to state 23


state 15

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


state 16

    5 declaration: type_variable DEUX_POINTS . IDF POINT_VIRGULE

    IDF  shift, and go to state 24


state 17

    4 declaration: FIXE type_variable DEUX_POINTS . IDF EGAL expression POINT_VIRGULE

    IDF  shift, and go to state 25


state 18

   22 condition: SI . PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc SINON bloc
   23          | SI . PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc

    PARENTHOISE_OUVRANTE  shift, and go to state 26


state 19

   24 boucle: TANTQUE . PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE FAIRE bloc

    PARENTHOISE_OUVRANTE  shift, and go to state 27


state 20

   14 bloc: ACCOLADE_OUVRANTE . instructions ACCOLADE_FERMANTE

    IDF      shift, and go to state 28
    SI       shift, and go to state 18
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 29
    LIRE     shift, and go to state 30

    $default  reduce using rule 16 (instructions)

    affect        go to state 31
    instructions  go to state 32
    instruction   go to state 33
    condition     go to state 34
    boucle        go to state 35


state 21

    1 programme: DEBUT declarations EXECUTION bloc . FIN

    FIN  shift, and go to state 36


state 22

   12 bloc: condition .

    $default  reduce using rule 12 (bloc)


state 23

   13 bloc: boucle .

    $default  reduce using rule 13 (bloc)


state 24

    5 declaration: type_variable DEUX_POINTS IDF . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 37


state 25

    4 declaration: FIXE type_variable DEUX_POINTS IDF . EGAL expression POINT_VIRGULE

    EGAL  shift, and go to state 38


state 26

   22 condition: SI PARENTHOISE_OUVRANTE . expression PARENTHOISE_FERMANTE ALORS bloc SINON bloc
   23          | SI PARENTHOISE_OUVRANTE . expression PARENTHOISE_FERMANTE ALORS bloc

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 49
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 27

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE . expression PARENTHOISE_FERMANTE FAIRE bloc

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 52
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 28

   11 affect: IDF . AFFECTION expression POINT_VIRGULE

    AFFECTION  shift, and go to state 53


state 29

   17 instruction: AFFICHE . PARENTHOISE_OUVRANTE liste_arguments PARENTHOISE_FERMANTE POINT_VIRGULE

    PARENTHOISE_OUVRANTE  shift, and go to state 54


state 30

   18 instruction: LIRE . IDF POINT_VIRGULE

    IDF  shift, and go to state 55


state 31

   21 instruction: affect .

    $default  reduce using rule 21 (instruction)


state 32

   14 bloc: ACCOLADE_OUVRANTE instructions . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 56


state 33

   15 instructions: instruction . instructions

    IDF      shift, and go to state 28
    SI       shift, and go to state 18
    TANTQUE  shift, and go to state 19
    AFFICHE  shift, and go to state 29
    LIRE     shift, and go to state 30

    $default  reduce using rule 16 (instructions)

    affect        go to state 31
    instructions  go to state 57
    instruction   go to state 33
    condition     go to state 34
    boucle        go to state 35


state 34

   19 instruction: condition .

    $default  reduce using rule 19 (instruction)


state 35

   20 instruction: boucle .

    $default  reduce using rule 20 (instruction)


state 36

    1 programme: DEBUT declarations EXECUTION bloc FIN .

    $default  reduce using rule 1 (programme)


state 37

    5 declaration: type_variable DEUX_POINTS IDF POINT_VIRGULE .

    $default  reduce using rule 5 (declaration)


state 38

    4 declaration: FIXE type_variable DEUX_POINTS IDF EGAL . expression POINT_VIRGULE

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 58
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 39

   32 expression: NUM .

    $default  reduce using rule 32 (expression)


state 40

   34 expression: SIGNEDNUM .

    $default  reduce using rule 34 (expression)


state 41

   33 expression: REAL .

    $default  reduce using rule 33 (expression)


state 42

   35 expression: SIGNEDREAL .

    $default  reduce using rule 35 (expression)


state 43

   36 expression: TEXT .

    $default  reduce using rule 36 (expression)


state 44

   31 expression: IDF .

    $default  reduce using rule 31 (expression)


state 45

   39 expression: PARENTHOISE_OUVRANTE . expression PARENTHOISE_FERMANTE

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 59
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 46

   52 operation_logique: NON . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 60
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 47

   37 expression: condition .

    $default  reduce using rule 37 (expression)


state 48

   38 expression: boucle .

    $default  reduce using rule 38 (expression)


state 49

   22 condition: SI PARENTHOISE_OUVRANTE expression . PARENTHOISE_FERMANTE ALORS bloc SINON bloc
   23          | SI PARENTHOISE_OUVRANTE expression . PARENTHOISE_FERMANTE ALORS bloc
   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PARENTHOISE_FERMANTE  shift, and go to state 61
    PLUS                  shift, and go to state 62
    MOINS                 shift, and go to state 63
    MULT                  shift, and go to state 64
    DIV                   shift, and go to state 65
    EGAL                  shift, and go to state 66
    INF                   shift, and go to state 67
    SUP                   shift, and go to state 68
    DIFFERENT             shift, and go to state 69
    INF_EGAL              shift, and go to state 70
    SUP_EGAL              shift, and go to state 71
    OU                    shift, and go to state 72
    ET                    shift, and go to state 73


state 50

   29 expression: operation_arithmetique .

    $default  reduce using rule 29 (expression)


state 51

   30 expression: operation_logique .

    $default  reduce using rule 30 (expression)


state 52

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE expression . PARENTHOISE_FERMANTE FAIRE bloc
   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PARENTHOISE_FERMANTE  shift, and go to state 74
    PLUS                  shift, and go to state 62
    MOINS                 shift, and go to state 63
    MULT                  shift, and go to state 64
    DIV                   shift, and go to state 65
    EGAL                  shift, and go to state 66
    INF                   shift, and go to state 67
    SUP                   shift, and go to state 68
    DIFFERENT             shift, and go to state 69
    INF_EGAL              shift, and go to state 70
    SUP_EGAL              shift, and go to state 71
    OU                    shift, and go to state 72
    ET                    shift, and go to state 73


state 53

   11 affect: IDF AFFECTION . expression POINT_VIRGULE

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 75
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 54

   17 instruction: AFFICHE PARENTHOISE_OUVRANTE . liste_arguments PARENTHOISE_FERMANTE POINT_VIRGULE

    TEXT  shift, and go to state 76
    IDF   shift, and go to state 77

    liste_arguments  go to state 78


state 55

   18 instruction: LIRE IDF . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 79


state 56

   14 bloc: ACCOLADE_OUVRANTE instructions ACCOLADE_FERMANTE .

    $default  reduce using rule 14 (bloc)


state 57

   15 instructions: instruction instructions .

    $default  reduce using rule 15 (instructions)


state 58

    4 declaration: FIXE type_variable DEUX_POINTS IDF EGAL expression . POINT_VIRGULE
   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS           shift, and go to state 62
    MOINS          shift, and go to state 63
    MULT           shift, and go to state 64
    DIV            shift, and go to state 65
    POINT_VIRGULE  shift, and go to state 80
    EGAL           shift, and go to state 66
    INF            shift, and go to state 67
    SUP            shift, and go to state 68
    DIFFERENT      shift, and go to state 69
    INF_EGAL       shift, and go to state 70
    SUP_EGAL       shift, and go to state 71
    OU             shift, and go to state 72
    ET             shift, and go to state 73


state 59

   39 expression: PARENTHOISE_OUVRANTE expression . PARENTHOISE_FERMANTE
   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PARENTHOISE_FERMANTE  shift, and go to state 81
    PLUS                  shift, and go to state 62
    MOINS                 shift, and go to state 63
    MULT                  shift, and go to state 64
    DIV                   shift, and go to state 65
    EGAL                  shift, and go to state 66
    INF                   shift, and go to state 67
    SUP                   shift, and go to state 68
    DIFFERENT             shift, and go to state 69
    INF_EGAL              shift, and go to state 70
    SUP_EGAL              shift, and go to state 71
    OU                    shift, and go to state 72
    ET                    shift, and go to state 73


state 60

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression
   52                  | NON expression .

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    INF        shift, and go to state 67
    SUP        shift, and go to state 68
    DIFFERENT  shift, and go to state 69
    INF_EGAL   shift, and go to state 70
    SUP_EGAL   shift, and go to state 71

    $default  reduce using rule 52 (operation_logique)


state 61

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE . ALORS bloc SINON bloc
   23          | SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE . ALORS bloc

    ALORS  shift, and go to state 82


state 62

   40 operation_arithmetique: expression PLUS . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 83
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 63

   41 operation_arithmetique: expression MOINS . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 84
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 64

   42 operation_arithmetique: expression MULT . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 85
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 65

   43 operation_arithmetique: expression DIV . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 86
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 66

   44 operation_logique: expression EGAL . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 87
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 67

   45 operation_logique: expression INF . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 88
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 68

   46 operation_logique: expression SUP . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 89
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 69

   47 operation_logique: expression DIFFERENT . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 90
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 70

   48 operation_logique: expression INF_EGAL . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 91
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 71

   49 operation_logique: expression SUP_EGAL . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 92
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 72

   51 operation_logique: expression OU . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 93
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 73

   50 operation_logique: expression ET . expression

    NUM                   shift, and go to state 39
    SIGNEDNUM             shift, and go to state 40
    REAL                  shift, and go to state 41
    SIGNEDREAL            shift, and go to state 42
    TEXT                  shift, and go to state 43
    IDF                   shift, and go to state 44
    SI                    shift, and go to state 18
    TANTQUE               shift, and go to state 19
    PARENTHOISE_OUVRANTE  shift, and go to state 45
    NON                   shift, and go to state 46

    condition               go to state 47
    boucle                  go to state 48
    expression              go to state 94
    operation_arithmetique  go to state 50
    operation_logique       go to state 51


state 74

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE . FAIRE bloc

    FAIRE  shift, and go to state 95


state 75

   11 affect: IDF AFFECTION expression . POINT_VIRGULE
   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS           shift, and go to state 62
    MOINS          shift, and go to state 63
    MULT           shift, and go to state 64
    DIV            shift, and go to state 65
    POINT_VIRGULE  shift, and go to state 96
    EGAL           shift, and go to state 66
    INF            shift, and go to state 67
    SUP            shift, and go to state 68
    DIFFERENT      shift, and go to state 69
    INF_EGAL       shift, and go to state 70
    SUP_EGAL       shift, and go to state 71
    OU             shift, and go to state 72
    ET             shift, and go to state 73


state 76

   25 liste_arguments: TEXT .

    $default  reduce using rule 25 (liste_arguments)


state 77

   26 liste_arguments: IDF .

    $default  reduce using rule 26 (liste_arguments)


state 78

   17 instruction: AFFICHE PARENTHOISE_OUVRANTE liste_arguments . PARENTHOISE_FERMANTE POINT_VIRGULE
   27 liste_arguments: liste_arguments . VIRGULE TEXT
   28                | liste_arguments . VIRGULE IDF

    PARENTHOISE_FERMANTE  shift, and go to state 97
    VIRGULE               shift, and go to state 98


state 79

   18 instruction: LIRE IDF POINT_VIRGULE .

    $default  reduce using rule 18 (instruction)


state 80

    4 declaration: FIXE type_variable DEUX_POINTS IDF EGAL expression POINT_VIRGULE .

    $default  reduce using rule 4 (declaration)


state 81

   39 expression: PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE .

    $default  reduce using rule 39 (expression)


state 82

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS . bloc SINON bloc
   23          | SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS . bloc

    SI                 shift, and go to state 18
    TANTQUE            shift, and go to state 19
    ACCOLADE_OUVRANTE  shift, and go to state 20

    bloc       go to state 99
    condition  go to state 22
    boucle     go to state 23


state 83

   40 operation_arithmetique: expression . PLUS expression
   40                       | expression PLUS expression .
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    MULT  shift, and go to state 64
    DIV   shift, and go to state 65

    $default  reduce using rule 40 (operation_arithmetique)


state 84

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   41                       | expression MOINS expression .
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    MULT  shift, and go to state 64
    DIV   shift, and go to state 65

    $default  reduce using rule 41 (operation_arithmetique)


state 85

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   42                       | expression MULT expression .
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    $default  reduce using rule 42 (operation_arithmetique)


state 86

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   43                       | expression DIV expression .
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    $default  reduce using rule 43 (operation_arithmetique)


state 87

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   44                  | expression EGAL expression .
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 44 (operation_logique)


state 88

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   45                  | expression INF expression .
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    DIFFERENT  shift, and go to state 69

    INF       error (nonassociative)
    SUP       error (nonassociative)
    INF_EGAL  error (nonassociative)
    SUP_EGAL  error (nonassociative)

    $default  reduce using rule 45 (operation_logique)


state 89

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   46                  | expression SUP expression .
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    DIFFERENT  shift, and go to state 69

    INF       error (nonassociative)
    SUP       error (nonassociative)
    INF_EGAL  error (nonassociative)
    SUP_EGAL  error (nonassociative)

    $default  reduce using rule 46 (operation_logique)


state 90

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   47                  | expression DIFFERENT expression .
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    MULT   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 47 (operation_logique)


state 91

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   48                  | expression INF_EGAL expression .
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    DIFFERENT  shift, and go to state 69

    INF       error (nonassociative)
    SUP       error (nonassociative)
    INF_EGAL  error (nonassociative)
    SUP_EGAL  error (nonassociative)

    $default  reduce using rule 48 (operation_logique)


state 92

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   49                  | expression SUP_EGAL expression .
   50                  | expression . ET expression
   51                  | expression . OU expression

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    DIFFERENT  shift, and go to state 69

    INF       error (nonassociative)
    SUP       error (nonassociative)
    INF_EGAL  error (nonassociative)
    SUP_EGAL  error (nonassociative)

    $default  reduce using rule 49 (operation_logique)


state 93

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   51                  | expression . OU expression
   51                  | expression OU expression .

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    INF        shift, and go to state 67
    SUP        shift, and go to state 68
    DIFFERENT  shift, and go to state 69
    INF_EGAL   shift, and go to state 70
    SUP_EGAL   shift, and go to state 71
    ET         shift, and go to state 73

    $default  reduce using rule 51 (operation_logique)


state 94

   40 operation_arithmetique: expression . PLUS expression
   41                       | expression . MOINS expression
   42                       | expression . MULT expression
   43                       | expression . DIV expression
   44 operation_logique: expression . EGAL expression
   45                  | expression . INF expression
   46                  | expression . SUP expression
   47                  | expression . DIFFERENT expression
   48                  | expression . INF_EGAL expression
   49                  | expression . SUP_EGAL expression
   50                  | expression . ET expression
   50                  | expression ET expression .
   51                  | expression . OU expression

    PLUS       shift, and go to state 62
    MOINS      shift, and go to state 63
    MULT       shift, and go to state 64
    DIV        shift, and go to state 65
    EGAL       shift, and go to state 66
    INF        shift, and go to state 67
    SUP        shift, and go to state 68
    DIFFERENT  shift, and go to state 69
    INF_EGAL   shift, and go to state 70
    SUP_EGAL   shift, and go to state 71

    $default  reduce using rule 50 (operation_logique)


state 95

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE FAIRE . bloc

    SI                 shift, and go to state 18
    TANTQUE            shift, and go to state 19
    ACCOLADE_OUVRANTE  shift, and go to state 20

    bloc       go to state 100
    condition  go to state 22
    boucle     go to state 23


state 96

   11 affect: IDF AFFECTION expression POINT_VIRGULE .

    $default  reduce using rule 11 (affect)


state 97

   17 instruction: AFFICHE PARENTHOISE_OUVRANTE liste_arguments PARENTHOISE_FERMANTE . POINT_VIRGULE

    POINT_VIRGULE  shift, and go to state 101


state 98

   27 liste_arguments: liste_arguments VIRGULE . TEXT
   28                | liste_arguments VIRGULE . IDF

    TEXT  shift, and go to state 102
    IDF   shift, and go to state 103


state 99

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc . SINON bloc
   23          | SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc .

    SINON  shift, and go to state 104

    SINON     [reduce using rule 23 (condition)]
    $default  reduce using rule 23 (condition)


state 100

   24 boucle: TANTQUE PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE FAIRE bloc .

    $default  reduce using rule 24 (boucle)


state 101

   17 instruction: AFFICHE PARENTHOISE_OUVRANTE liste_arguments PARENTHOISE_FERMANTE POINT_VIRGULE .

    $default  reduce using rule 17 (instruction)


state 102

   27 liste_arguments: liste_arguments VIRGULE TEXT .

    $default  reduce using rule 27 (liste_arguments)


state 103

   28 liste_arguments: liste_arguments VIRGULE IDF .

    $default  reduce using rule 28 (liste_arguments)


state 104

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc SINON . bloc

    SI                 shift, and go to state 18
    TANTQUE            shift, and go to state 19
    ACCOLADE_OUVRANTE  shift, and go to state 20

    bloc       go to state 105
    condition  go to state 22
    boucle     go to state 23


state 105

   22 condition: SI PARENTHOISE_OUVRANTE expression PARENTHOISE_FERMANTE ALORS bloc SINON bloc .

    $default  reduce using rule 22 (condition)
