Terminals unused in grammar

   FIXE
   COMMA
   SIGNEDNUM
   SIGNEDREAL
   TEXTE
   NEQ


Grammar

    0 $accept: programme $end

    1 $@1: /* empty */

    2 programme: DEBUT $@1 liste_declarations EXECUTION LFBRA liste_instructions RTBRA FIN

    3 bloc: LFBRA liste_instructions RTBRA

    4 liste_declarations: declaration
    5                   | liste_declarations declaration

    6 declaration: NUM COLON IDENTIFICATEUR PVIRG
    7            | REAL COLON IDENTIFICATEUR PVIRG
    8            | TEXT COLON IDENTIFICATEUR PVIRG

    9 liste_instructions: instruction
   10                   | liste_instructions instruction

   11 instruction: affectation
   12            | selection
   13            | iteration
   14            | entree_sortie

   15 affectation: IDENTIFICATEUR AFFECT expression PVIRG
   16            | IDENTIFICATEUR LFSQBRA expression RTSQBRA AFFECT expression PVIRG

   17 selection: SI LFPar condition RTPar ALORS bloc
   18          | SI LFPar condition RTPar ALORS bloc SINON bloc

   19 iteration: TANTQUE condition FAIRE bloc

   20 condition: expression LESS expression
   21          | expression GREATER expression
   22          | expression LEQ expression
   23          | expression GEQ expression
   24          | expression EQUAL expression
   25          | expression DIFFERENT expression
   26          | condition ET condition
   27          | condition OU condition
   28          | NON condition

   29 expression: NOMBRE_ENTIER
   30           | NOMBRE_REEL
   31           | CHAINE_TEXTE
   32           | IDENTIFICATEUR
   33           | IDENTIFICATEUR LFSQBRA expression RTSQBRA
   34           | expression PLUS expression
   35           | expression MINUS expression
   36           | expression MULT expression
   37           | expression DIV expression
   38           | LFPar expression RTPar
   39           | MINUS expression

   40 entree_sortie: affiche LFPar expression RTPar PVIRG
   41              | lire LFPar IDENTIFICATEUR RTPar PVIRG


Terminals, with rules where they appear

$end (0) 0
error (256)
TEXT (258) 8
DEBUT (259) 2
FIN (260) 2
EXECUTION (261) 2
SI (262) 17 18
ALORS (263) 17 18
SINON (264) 18
TANTQUE (265) 19
FAIRE (266) 19
FIXE (267)
affiche (268) 40
lire (269) 41
OU (270) 27
ET (271) 26
NON (272) 28
LFBRA (273) 2 3
RTBRA (274) 2 3
LFSQBRA (275) 16 33
RTSQBRA (276) 16 33
LFPar (277) 17 18 38 40 41
RTPar (278) 17 18 38 40 41
MINUS (279) 35 39
PLUS (280) 34
MULT (281) 36
DIV (282) 37
COMMA (283)
EQUAL (284) 24
COLON (285) 6 7 8
NUM (286) 6
SIGNEDNUM (287)
REAL (288) 7
SIGNEDREAL (289)
TEXTE (290)
PVIRG (291) 6 7 8 15 16 40 41
AFFECT (292) 15 16
LESS (293) 20
LEQ (294) 22
GREATER (295) 21
GEQ (296) 23
NEQ (297)
IDENTIFICATEUR (298) 6 7 8 15 16 32 33 41
NOMBRE_ENTIER (299) 29
NOMBRE_REEL (300) 30
CHAINE_TEXTE (301) 31
DIFFERENT (302) 25
MOINS_UNAIRE (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
programme (50)
    on left: 2, on right: 0
$@1 (51)
    on left: 1, on right: 2
bloc (52)
    on left: 3, on right: 17 18 19
liste_declarations (53)
    on left: 4 5, on right: 2 5
declaration (54)
    on left: 6 7 8, on right: 4 5
liste_instructions (55)
    on left: 9 10, on right: 2 3 10
instruction (56)
    on left: 11 12 13 14, on right: 9 10
affectation (57)
    on left: 15 16, on right: 11
selection (58)
    on left: 17 18, on right: 12
iteration (59)
    on left: 19, on right: 13
condition (60)
    on left: 20 21 22 23 24 25 26 27 28, on right: 17 18 19 26 27 28
expression (61)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 15 16 20 21
    22 23 24 25 33 34 35 36 37 38 39 40
entree_sortie (62)
    on left: 40 41, on right: 14


state 0

    0 $accept: . programme $end

    DEBUT  shift, and go to state 1

    programme  go to state 2


state 1

    2 programme: DEBUT . $@1 liste_declarations EXECUTION LFBRA liste_instructions RTBRA FIN

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


state 2

    0 $accept: programme . $end

    $end  shift, and go to state 4


state 3

    2 programme: DEBUT $@1 . liste_declarations EXECUTION LFBRA liste_instructions RTBRA FIN

    TEXT  shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    liste_declarations  go to state 8
    declaration         go to state 9


state 4

    0 $accept: programme $end .

    $default  accept


state 5

    8 declaration: TEXT . COLON IDENTIFICATEUR PVIRG

    COLON  shift, and go to state 10


state 6

    6 declaration: NUM . COLON IDENTIFICATEUR PVIRG

    COLON  shift, and go to state 11


state 7

    7 declaration: REAL . COLON IDENTIFICATEUR PVIRG

    COLON  shift, and go to state 12


state 8

    2 programme: DEBUT $@1 liste_declarations . EXECUTION LFBRA liste_instructions RTBRA FIN
    5 liste_declarations: liste_declarations . declaration

    TEXT       shift, and go to state 5
    EXECUTION  shift, and go to state 13
    NUM        shift, and go to state 6
    REAL       shift, and go to state 7

    declaration  go to state 14


state 9

    4 liste_declarations: declaration .

    $default  reduce using rule 4 (liste_declarations)


state 10

    8 declaration: TEXT COLON . IDENTIFICATEUR PVIRG

    IDENTIFICATEUR  shift, and go to state 15


state 11

    6 declaration: NUM COLON . IDENTIFICATEUR PVIRG

    IDENTIFICATEUR  shift, and go to state 16


state 12

    7 declaration: REAL COLON . IDENTIFICATEUR PVIRG

    IDENTIFICATEUR  shift, and go to state 17


state 13

    2 programme: DEBUT $@1 liste_declarations EXECUTION . LFBRA liste_instructions RTBRA FIN

    LFBRA  shift, and go to state 18


state 14

    5 liste_declarations: liste_declarations declaration .

    $default  reduce using rule 5 (liste_declarations)


state 15

    8 declaration: TEXT COLON IDENTIFICATEUR . PVIRG

    PVIRG  shift, and go to state 19


state 16

    6 declaration: NUM COLON IDENTIFICATEUR . PVIRG

    PVIRG  shift, and go to state 20


state 17

    7 declaration: REAL COLON IDENTIFICATEUR . PVIRG

    PVIRG  shift, and go to state 21


state 18

    2 programme: DEBUT $@1 liste_declarations EXECUTION LFBRA . liste_instructions RTBRA FIN

    SI              shift, and go to state 22
    TANTQUE         shift, and go to state 23
    affiche         shift, and go to state 24
    lire            shift, and go to state 25
    IDENTIFICATEUR  shift, and go to state 26

    liste_instructions  go to state 27
    instruction         go to state 28
    affectation         go to state 29
    selection           go to state 30
    iteration           go to state 31
    entree_sortie       go to state 32


state 19

    8 declaration: TEXT COLON IDENTIFICATEUR PVIRG .

    $default  reduce using rule 8 (declaration)


state 20

    6 declaration: NUM COLON IDENTIFICATEUR PVIRG .

    $default  reduce using rule 6 (declaration)


state 21

    7 declaration: REAL COLON IDENTIFICATEUR PVIRG .

    $default  reduce using rule 7 (declaration)


state 22

   17 selection: SI . LFPar condition RTPar ALORS bloc
   18          | SI . LFPar condition RTPar ALORS bloc SINON bloc

    LFPar  shift, and go to state 33


state 23

   19 iteration: TANTQUE . condition FAIRE bloc

    NON             shift, and go to state 34
    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    condition   go to state 41
    expression  go to state 42


state 24

   40 entree_sortie: affiche . LFPar expression RTPar PVIRG

    LFPar  shift, and go to state 43


state 25

   41 entree_sortie: lire . LFPar IDENTIFICATEUR RTPar PVIRG

    LFPar  shift, and go to state 44


state 26

   15 affectation: IDENTIFICATEUR . AFFECT expression PVIRG
   16            | IDENTIFICATEUR . LFSQBRA expression RTSQBRA AFFECT expression PVIRG

    LFSQBRA  shift, and go to state 45
    AFFECT   shift, and go to state 46


state 27

    2 programme: DEBUT $@1 liste_declarations EXECUTION LFBRA liste_instructions . RTBRA FIN
   10 liste_instructions: liste_instructions . instruction

    SI              shift, and go to state 22
    TANTQUE         shift, and go to state 23
    affiche         shift, and go to state 24
    lire            shift, and go to state 25
    RTBRA           shift, and go to state 47
    IDENTIFICATEUR  shift, and go to state 26

    instruction    go to state 48
    affectation    go to state 29
    selection      go to state 30
    iteration      go to state 31
    entree_sortie  go to state 32


state 28

    9 liste_instructions: instruction .

    $default  reduce using rule 9 (liste_instructions)


state 29

   11 instruction: affectation .

    $default  reduce using rule 11 (instruction)


state 30

   12 instruction: selection .

    $default  reduce using rule 12 (instruction)


state 31

   13 instruction: iteration .

    $default  reduce using rule 13 (instruction)


state 32

   14 instruction: entree_sortie .

    $default  reduce using rule 14 (instruction)


state 33

   17 selection: SI LFPar . condition RTPar ALORS bloc
   18          | SI LFPar . condition RTPar ALORS bloc SINON bloc

    NON             shift, and go to state 34
    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    condition   go to state 49
    expression  go to state 42


state 34

   28 condition: NON . condition

    NON             shift, and go to state 34
    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    condition   go to state 50
    expression  go to state 42


state 35

   38 expression: LFPar . expression RTPar

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 51


state 36

   39 expression: MINUS . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 52


state 37

   32 expression: IDENTIFICATEUR .
   33           | IDENTIFICATEUR . LFSQBRA expression RTSQBRA

    LFSQBRA  shift, and go to state 53

    $default  reduce using rule 32 (expression)


state 38

   29 expression: NOMBRE_ENTIER .

    $default  reduce using rule 29 (expression)


state 39

   30 expression: NOMBRE_REEL .

    $default  reduce using rule 30 (expression)


state 40

   31 expression: CHAINE_TEXTE .

    $default  reduce using rule 31 (expression)


state 41

   19 iteration: TANTQUE condition . FAIRE bloc
   26 condition: condition . ET condition
   27          | condition . OU condition

    FAIRE  shift, and go to state 54
    OU     shift, and go to state 55
    ET     shift, and go to state 56


state 42

   20 condition: expression . LESS expression
   21          | expression . GREATER expression
   22          | expression . LEQ expression
   23          | expression . GEQ expression
   24          | expression . EQUAL expression
   25          | expression . DIFFERENT expression
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS      shift, and go to state 57
    PLUS       shift, and go to state 58
    MULT       shift, and go to state 59
    DIV        shift, and go to state 60
    EQUAL      shift, and go to state 61
    LESS       shift, and go to state 62
    LEQ        shift, and go to state 63
    GREATER    shift, and go to state 64
    GEQ        shift, and go to state 65
    DIFFERENT  shift, and go to state 66


state 43

   40 entree_sortie: affiche LFPar . expression RTPar PVIRG

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 67


state 44

   41 entree_sortie: lire LFPar . IDENTIFICATEUR RTPar PVIRG

    IDENTIFICATEUR  shift, and go to state 68


state 45

   16 affectation: IDENTIFICATEUR LFSQBRA . expression RTSQBRA AFFECT expression PVIRG

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 69


state 46

   15 affectation: IDENTIFICATEUR AFFECT . expression PVIRG

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 70


state 47

    2 programme: DEBUT $@1 liste_declarations EXECUTION LFBRA liste_instructions RTBRA . FIN

    FIN  shift, and go to state 71


state 48

   10 liste_instructions: liste_instructions instruction .

    $default  reduce using rule 10 (liste_instructions)


state 49

   17 selection: SI LFPar condition . RTPar ALORS bloc
   18          | SI LFPar condition . RTPar ALORS bloc SINON bloc
   26 condition: condition . ET condition
   27          | condition . OU condition

    OU     shift, and go to state 55
    ET     shift, and go to state 56
    RTPar  shift, and go to state 72


state 50

   26 condition: condition . ET condition
   27          | condition . OU condition
   28          | NON condition .

    $default  reduce using rule 28 (condition)


state 51

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression
   38           | LFPar expression . RTPar

    RTPar  shift, and go to state 73
    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60


state 52

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression
   39           | MINUS expression .

    $default  reduce using rule 39 (expression)


state 53

   33 expression: IDENTIFICATEUR LFSQBRA . expression RTSQBRA

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 74


state 54

   19 iteration: TANTQUE condition FAIRE . bloc

    LFBRA  shift, and go to state 75

    bloc  go to state 76


state 55

   27 condition: condition OU . condition

    NON             shift, and go to state 34
    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    condition   go to state 77
    expression  go to state 42


state 56

   26 condition: condition ET . condition

    NON             shift, and go to state 34
    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    condition   go to state 78
    expression  go to state 42


state 57

   35 expression: expression MINUS . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 79


state 58

   34 expression: expression PLUS . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 80


state 59

   36 expression: expression MULT . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 81


state 60

   37 expression: expression DIV . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 82


state 61

   24 condition: expression EQUAL . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 83


state 62

   20 condition: expression LESS . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 84


state 63

   22 condition: expression LEQ . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 85


state 64

   21 condition: expression GREATER . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 86


state 65

   23 condition: expression GEQ . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 87


state 66

   25 condition: expression DIFFERENT . expression

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 88


state 67

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression
   40 entree_sortie: affiche LFPar expression . RTPar PVIRG

    RTPar  shift, and go to state 89
    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60


state 68

   41 entree_sortie: lire LFPar IDENTIFICATEUR . RTPar PVIRG

    RTPar  shift, and go to state 90


state 69

   16 affectation: IDENTIFICATEUR LFSQBRA expression . RTSQBRA AFFECT expression PVIRG
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    RTSQBRA  shift, and go to state 91
    MINUS    shift, and go to state 57
    PLUS     shift, and go to state 58
    MULT     shift, and go to state 59
    DIV      shift, and go to state 60


state 70

   15 affectation: IDENTIFICATEUR AFFECT expression . PVIRG
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60
    PVIRG  shift, and go to state 92


state 71

    2 programme: DEBUT $@1 liste_declarations EXECUTION LFBRA liste_instructions RTBRA FIN .

    $default  reduce using rule 2 (programme)


state 72

   17 selection: SI LFPar condition RTPar . ALORS bloc
   18          | SI LFPar condition RTPar . ALORS bloc SINON bloc

    ALORS  shift, and go to state 93


state 73

   38 expression: LFPar expression RTPar .

    $default  reduce using rule 38 (expression)


state 74

   33 expression: IDENTIFICATEUR LFSQBRA expression . RTSQBRA
   34           | expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    RTSQBRA  shift, and go to state 94
    MINUS    shift, and go to state 57
    PLUS     shift, and go to state 58
    MULT     shift, and go to state 59
    DIV      shift, and go to state 60


state 75

    3 bloc: LFBRA . liste_instructions RTBRA

    SI              shift, and go to state 22
    TANTQUE         shift, and go to state 23
    affiche         shift, and go to state 24
    lire            shift, and go to state 25
    IDENTIFICATEUR  shift, and go to state 26

    liste_instructions  go to state 95
    instruction         go to state 28
    affectation         go to state 29
    selection           go to state 30
    iteration           go to state 31
    entree_sortie       go to state 32


state 76

   19 iteration: TANTQUE condition FAIRE bloc .

    $default  reduce using rule 19 (iteration)


state 77

   26 condition: condition . ET condition
   27          | condition . OU condition
   27          | condition OU condition .

    ET  shift, and go to state 56

    $default  reduce using rule 27 (condition)


state 78

   26 condition: condition . ET condition
   26          | condition ET condition .
   27          | condition . OU condition

    $default  reduce using rule 26 (condition)


state 79

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   35           | expression MINUS expression .
   36           | expression . MULT expression
   37           | expression . DIV expression

    MULT  shift, and go to state 59
    DIV   shift, and go to state 60

    $default  reduce using rule 35 (expression)


state 80

   34 expression: expression . PLUS expression
   34           | expression PLUS expression .
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MULT  shift, and go to state 59
    DIV   shift, and go to state 60

    $default  reduce using rule 34 (expression)


state 81

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   36           | expression MULT expression .
   37           | expression . DIV expression

    $default  reduce using rule 36 (expression)


state 82

   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression
   37           | expression DIV expression .

    $default  reduce using rule 37 (expression)


state 83

   24 condition: expression EQUAL expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 24 (condition)


state 84

   20 condition: expression LESS expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 20 (condition)


state 85

   22 condition: expression LEQ expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 22 (condition)


state 86

   21 condition: expression GREATER expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 21 (condition)


state 87

   23 condition: expression GEQ expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 23 (condition)


state 88

   25 condition: expression DIFFERENT expression .
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60

    $default  reduce using rule 25 (condition)


state 89

   40 entree_sortie: affiche LFPar expression RTPar . PVIRG

    PVIRG  shift, and go to state 96


state 90

   41 entree_sortie: lire LFPar IDENTIFICATEUR RTPar . PVIRG

    PVIRG  shift, and go to state 97


state 91

   16 affectation: IDENTIFICATEUR LFSQBRA expression RTSQBRA . AFFECT expression PVIRG

    AFFECT  shift, and go to state 98


state 92

   15 affectation: IDENTIFICATEUR AFFECT expression PVIRG .

    $default  reduce using rule 15 (affectation)


state 93

   17 selection: SI LFPar condition RTPar ALORS . bloc
   18          | SI LFPar condition RTPar ALORS . bloc SINON bloc

    LFBRA  shift, and go to state 75

    bloc  go to state 99


state 94

   33 expression: IDENTIFICATEUR LFSQBRA expression RTSQBRA .

    $default  reduce using rule 33 (expression)


state 95

    3 bloc: LFBRA liste_instructions . RTBRA
   10 liste_instructions: liste_instructions . instruction

    SI              shift, and go to state 22
    TANTQUE         shift, and go to state 23
    affiche         shift, and go to state 24
    lire            shift, and go to state 25
    RTBRA           shift, and go to state 100
    IDENTIFICATEUR  shift, and go to state 26

    instruction    go to state 48
    affectation    go to state 29
    selection      go to state 30
    iteration      go to state 31
    entree_sortie  go to state 32


state 96

   40 entree_sortie: affiche LFPar expression RTPar PVIRG .

    $default  reduce using rule 40 (entree_sortie)


state 97

   41 entree_sortie: lire LFPar IDENTIFICATEUR RTPar PVIRG .

    $default  reduce using rule 41 (entree_sortie)


state 98

   16 affectation: IDENTIFICATEUR LFSQBRA expression RTSQBRA AFFECT . expression PVIRG

    LFPar           shift, and go to state 35
    MINUS           shift, and go to state 36
    IDENTIFICATEUR  shift, and go to state 37
    NOMBRE_ENTIER   shift, and go to state 38
    NOMBRE_REEL     shift, and go to state 39
    CHAINE_TEXTE    shift, and go to state 40

    expression  go to state 101


state 99

   17 selection: SI LFPar condition RTPar ALORS bloc .
   18          | SI LFPar condition RTPar ALORS bloc . SINON bloc

    SINON  shift, and go to state 102

    $default  reduce using rule 17 (selection)


state 100

    3 bloc: LFBRA liste_instructions RTBRA .

    $default  reduce using rule 3 (bloc)


state 101

   16 affectation: IDENTIFICATEUR LFSQBRA expression RTSQBRA AFFECT expression . PVIRG
   34 expression: expression . PLUS expression
   35           | expression . MINUS expression
   36           | expression . MULT expression
   37           | expression . DIV expression

    MINUS  shift, and go to state 57
    PLUS   shift, and go to state 58
    MULT   shift, and go to state 59
    DIV    shift, and go to state 60
    PVIRG  shift, and go to state 103


state 102

   18 selection: SI LFPar condition RTPar ALORS bloc SINON . bloc

    LFBRA  shift, and go to state 75

    bloc  go to state 104


state 103

   16 affectation: IDENTIFICATEUR LFSQBRA expression RTSQBRA AFFECT expression PVIRG .

    $default  reduce using rule 16 (affectation)


state 104

   18 selection: SI LFPar condition RTPar ALORS bloc SINON bloc .

    $default  reduce using rule 18 (selection)
